/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define DVORAK_LAYER 0
#define RUSSIAN_LAYER 1

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "ru_keys.h"


/ {


		macros {
		mv_to_rus: mv_to_rus
		{
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings
				= <&macro_press &kp LCTRL>
				, <&macro_tap &kp LSHFT>
				, <&macro_release &kp LCTRL>
				, <&macro_tap &to RUSSIAN_LAYER>
				;
		};

		mv_to_dvor: mv_to_dvor
		{
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings
				= <&macro_press &kp LCTRL>
				, <&macro_tap &kp LSHFT>
				, <&macro_release &kp LCTRL>
				, <&macro_tap &to DVORAK_LAYER>
				;
		};
	};

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                         bindings = <
   &kp TAB   &kp SQT &kp COMMA &kp DOT &kp P &kp Y   &kp F &kp G  &kp C     &kp R   &kp L    &kp BSPC
   &kp LCTRL &kp A &kp O &kp E &kp U &kp I   &kp D &kp H  &kp T     &kp N   &kp S &kp SQT
   &kp LSHFT &kp SEMICOLON &kp Q &kp J &kp K &kp X   &kp B &kp M  &kp W &kp V &kp Z &kp ESC
                  &mv_to_rus &mo 1 &kp SPACE   &kp RET &mo 2 &kp RALT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp TAB    &kp RU_YE       &kp RU_TSE       &kp RU_Y       &kp RU_K       &kp RU_E         &kp RU_H   &kp RU_G   &kp RU_SH &kp RU_SHb    &kp RU_Z &kp BSPC
   &bt BT_CLR &kp RU_F &kp RU_bl &kp RU_V &kp RU_A &kp RU_P   &kp RU_R &kp RU_O &kp RU_L &kp RU_D &kp RU_ZH &trans
   &kp LSHFT  &kp RU_YA       &kp RU_CH       &kp RU_C       &kp RU_M       &kp RU_I         &kp RU_T   &kp RU_b   &kp RU_B &kp RU_YU    &trans &trans
                                    &mv_to_dvor     &trans       &kp SPACE      &kp RET  &trans   &kp RALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &kp TILDE
                             &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };
        };
};
